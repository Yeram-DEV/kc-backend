on:
  push:
    branches:
      - main

jobs:
  deply:
    name: 'Build & Deploy'
    runs-on: ubuntu-latest

    steps:
      - uses: actions/checkout@v4

      - name: Use Node.js
        uses: actions/setup-node@v4
        with:
          node-version: 20
      - name: Use Bun
        uses: oven-sh/setup-bun@v2
        with:
          bun-version: latest

      - name: Cache node module
        uses: actions/cache@v4
        with:
          path: |
            ~/.bun/install/cache
          key: ${{ runner.os }}-bun-${{ hashFiles('**/bun.lockb') }}

      - name: Install Dependencies
        if: steps.cache-bun.outputs.cache-hit != 'true'
        run: bun install

      - name: Build Project
        run: bun run build

      - name: Compress Build Files
        run: |
          mkdir -p build
          cp -r ./dist/* ./build/
          tar -czf build.tar.gz ./build

      - name: Copy files to remote server via SSH
        uses: appleboy/scp-action@v0.1.7
        with:
          host: ${{ secrets.HOST }}
          username: ${{ secrets.USERNAME }}
          key: ${{ secrets.PASSWORD }}
          port: ${{ secrets.PORT }}
          source: "build.tar.gz"
          target: "/home/yeram/kc-backend"

      - name: Run remote commands via SSH
        uses: appleboy/ssh-action@v1.1.0
        with:
          host: ${{ secrets.HOST }}
          username: ${{ secrets.USERNAME }}
          password: ${{ secrets.PASSWORD }}
          port: ${{ secrets.PORT }}
          script: |
            cd /home/yeram/kc-backend                  
            tar -xzf build.tar.gz                  
            if [ -d "dist" ]; then                     
              mv dist old-dist                     
            fi
            mv build dist                             
            pm2 reload ecosystem.json               
